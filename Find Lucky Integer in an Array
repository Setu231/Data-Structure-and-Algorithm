class Solution {
    public int findLucky(int[] arr) {
        int count = -1;
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for (int i = 0; i < arr.length; i++) {
            map.put(arr[i],map.getOrDefault(arr[i],0) + 1);
        }
        for (int j : map.keySet()) {
            if (j == map.get(j)) {
                count = Math.max(map.get(j),count);
            }
        }
        return count;
    }
}

// class Solution {
//     public int findLucky(int[] arr) {
//         int [] res = new int[501];
//         int count = -1;
//         for (int i = 0; i < arr.length; i++) {
//             res[arr[i]]++;
//         }
//         for  (int i = 1; i < res.length; i++) {
//             if (i == res[i]) {
//                 count = res[i];
//             }
//         }
//         return count;
//     }
// }