class Solution {
    public List<List<Integer>> minimumAbsDifference(int[] arr) {
        int min = Integer.MAX_VALUE;
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(arr);
        for (int i = 0; i < arr.length - 1; i++) {
            if (arr[i+1] - arr[i] < min) {
                    min = arr[i+1] - arr[i];
                    list.clear();
                    list.add(Arrays.asList(arr[i], arr[i + 1]));
            }else if (arr[i+1] - arr[i] == min) {
                    list.add(Arrays.asList(arr[i], arr[i + 1]));
            }
        }
        return list;
    }
}

// class Solution {
//     public List<List<Integer>> minimumAbsDifference(int[] arr) {
//         int min = Integer.MAX_VALUE;
//         List<Integer> inList = new ArrayList<>();
//         List<List<Integer>> list = new ArrayList<>();
//         Arrays.sort(arr);
//         for (int i = 0; i < arr.length - 1; i++) {
//             if (arr[i+1] - arr[i] < min) {
//                     min = arr[i+1] - arr[i];
//             }
//         }
//         for (int i = 0; i < arr.length - 1; i++) {
//             if (arr[i+1] - arr[i] == min) {
//                     inList.add(arr[i]);
//                     inList.add(arr[i+1]);
//                     list.add(new ArrayList(inList));
//                     inList.clear();
//             }
//         }
//         return list;
//     }
// }